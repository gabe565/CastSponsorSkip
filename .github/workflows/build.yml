name: Build

on: push

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: false
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Change Cache Key
        run: echo '// ${{ github.job }}' >> go.sum
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Test
        run: go test ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Set build variables
        id: vars
        run: |
          args='release --clean'
          if [[ "$GITHUB_REF" != refs/tags/* ]]; then
            args+=' --snapshot'
          fi
          echo "args=$args" >> $GITHUB_OUTPUT
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: ${{ steps.vars.outputs.args }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
          HOMEBREW_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}
          AUR_SSH_KEY: ${{ secrets.AUR_SSH_KEY }}
      - name: Push beta image
        if: github.ref_name == 'main'
        run: |
          export REPO="$(tr '[[:upper:]]' '[[:lower:]]' <<< "ghcr.io/$GITHUB_REPOSITORY")"
          IMAGES=()
          while read -r SOURCE DEST; do
            docker tag "$SOURCE" "$DEST"
            docker push "$DEST"
            IMAGES+=("$DEST")
          done \
            < <(docker image ls --format=json | \
              yq --input-format=json --no-doc '[.]' | \
              yq --output-format=tsv '.[] |
                select(.Repository == strenv(REPO)) |
                [
                  .Repository + ":" + .Tag,
                  .Repository + ":beta-" + (.Tag | sub(".*-", ""))
                ]
              ')

          docker manifest create "$REPO:beta" "${IMAGES[@]}"
          docker manifest push "$REPO:beta"
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
